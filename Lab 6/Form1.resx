<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AEw03/XKmemZXG5Sd/rqk7qaGf1/nWz2h1tWXoipeurMDqXZieLyKb02TpR2POvphrVS8//epXlJq4Nu
        TXdW5vvK2uUFWHmyWdeR9QG2cj9r5t15Zq8+R/yifj+rX7qoc/OGeX/a8s8/Wri0YeQrJ/U+Pi/AWlVM
        yB+Vzhe+mN5k9ct/3Ta5bsX4lZ+2+3pK700TyR0uzV2ErO+0nOVfflm3iXyFBrnYgKS3NfnkdvnjWPXs
        eZ3KEhue+GD6JzQa/bTi52qVpYUU2s20vC2kPp1y6lZlrfcYMjP9s1NfvD7xtkfmVK1ILZ395OiTtk0m
        d7hsesNoVz123lkTsgOXCbD0kL2eW1T4yIpvr3GA1Sly6MXHt8lhWcMq+Yqdn1VPUKHxa7woI3//i/1a
        FVkt7TtutLHaOdd1631f5pZRAIAfv8IBtqL2/ev2avHzM55ocs7TYNnDp7YvLdvm/GfrgmvVAKudd/3e
        LRJtDx9TfzUnNf+2Q9qWdTz9sWUramdfe+DBw+v/+azMXCzRZqdup2b/BbK+fY/auW2i8Uwt0ba825E7
        ttuix12NPr9UfIqX+nT0AXkzzNTnLw4/qbz9z3c94a+DTt99/SYndUvuOLxFSfPDxtZdXEhLfTKqa7OS
        5offsbRq2jlblpZ1yr+Br2rqWR1Ly3550UvVK2peu2T7ZHKb426c9PBD944eeMpuGydWD7CqL57pf/Il
        jy96YeV+fnVXt5bJ7S5+beVGG0kHWM+CAZZou/NR6eHqtV+HspKGyxUZtfOu3TOdvj1WfHXnkS1Kyjrs
        1yszrGdc9XDdx/VWV2iQiw3I6hP8FV/fe2ybkuYH3754tdHP/YQ1nOSdjux9Uo/uPXqdO+iO5xc2NSKF
        djMtt/0dDj/52K7btWveZvve4xruoq1Z+OzN5/XscVr/MY9cfWBeZWV28vY//uWZ7O4XD7D8IyuyvbQC
        AVbg0IuPb3bNvDd41hpWyVf0KFY5QUXGr8j+pzdT8Neq6GrfdaON1M4eduQpk/QXAPATUSTAVix/4IRN
        ygfW/f27oNoPxx+7RXL93Qa8nL33qnGAVc8dW/Gzsg27XP9W3szp66f+tFXZel1HzHn1sr2PGdfwcIxV
        pplN/6l82rxxFZuWrr/X0JkrZ6PFV1w1AdI//+XLy1u12O6PY4cdsWGTk7rsBDW5c/2luYyldxzePLHp
        Kf9envrk1oNaJdoee+/KK03ZKEr+fkj2/sGls6aMvPqKQUNHjJ386ofTm7gCdtbYkX1Pu/296kb7WTnp
        uDaJVl1GfJSXRsvemjG7bgcq7zmp5z+zw1v4CtjSu45atyS5+9C5DT2SvbhR2vGsFcsf6p0OwQNGNfmo
        kXyFBrnYgDQxwV/+cJ/N6q4DNhVgazzJ6aWppW+PP+WXzZJbnDTp09yyPIV2My1/C7On/G3PDZKbHDD8
        rfQu/Wf4Qe0797pvfmY/MnWUH0yVj5zTd2zuUtIaAqzhyIpuL+3bXQErPr6rrpm1hlXyFTs/TQXY6uOX
        /cFF9j+rwK9V8dW+40bz1b475Ig+D6xanQAAP1ZFAqxm5qC99xta/A7EnKp5UwYcXb7NTgeffvmwmwZ0
        61CaaLPPn0feNPjC437febsDzxmbfaBcntrZ1+3dKrnlnnvt0veh+od3fOOZWuajTuuXtv3DyMxTBBov
        yr1cZcVVE2DJ03/evkWr31z60lcFb2tKLbz90DaJZrsOfrv+R9S+M3iX5puf/GD6QFLzRx+0ftkWfR9t
        KLBl9x7btuWug2flzb9zmrgFMdGqfZd+07JPLMzfz9r3b9y3ZUly675T6nt0yXMDzhtVf4if33Zs7/uz
        x1M4wGo/HNE1vfn9Gq4orqh5/dIdmnU4/fHssw02TnY6v4lPfTVWaJCLDkhugr9Zn4frJ/6pBSO6tGzX
        fXwmab5rgKVlb7JLbNxrSnZRvkK7mb8o9+pfJ7ZLJHfqV3cHW/3V3GwdbX9J/fXGyqkX9r6pbtSaCLCm
        jqyy2PYyvl2AFR/fVdfMWsMq+Yqdn8IBln1VN34zVl+06qkr+GtVfLXvuNE8te9cc8Sp/1r5vxEAgB+5
        vABb/tZdl19y0xMfZuc4tZ8+O6iiYuj0zEyo+rUrftdm/d8OyJ9NNiFV+emcN158ckSPn5eWtNzn8kee
        fXXWgqWrRUnOl/86+WelZZ0veD5vQpW5qar0Fw0frsp+pKXlUXfVPTciu7Tjn6amly5/fUB5q9LNKsbV
        PUsxu2jLs3P3kKV397nzO5WtvBMrNX/4fs2SO+Y+oZP6/JEztmnWereBr6dno5WTjmtbummf1a4YpC1/
        45q92pZtevjodzMLU188e9Fvtjj81rpHZHz94mW/WXfdnS94KvsUg5p5tx7WsfzS55qYAqYLaPvkymc+
        ZvYzsfmp9RPh+gPMhlxq8aNndm5WUtJqyy6nXHjxn3vv/6vyc5/4MrXwwUt6XTjmsZE9Dh74ZnYos5+5
        a3FE7nJYuv3GHdGi4akVX71wWXnrsvZHj5uXfbnk6XO336Lijg8yO1397siDN2tfMTa3JP2tM8cPuWPG
        agdeeJCLDUhmgp9I/vqSV3KnatmLF/9m032HvZk9HY1GP23NJ7l+Ol7z/uiDNyhtvc/1s3PL8hTezUZb
        SO90//JmiQ26/XNF1RNn/Ly0rOMxo55/e/qUG87vumUysclR142/9f63V9R+NLbPaXfVNfKKxbcd1Lys
        IVULHlnh7eWOM501macgNkreoode9A23ZOxh6eM9K3O8eYqukq/Y+Vn1BDU9ftknvxfZ/2K/VkUP+7tu
        dKWaWYMP7ztZfwEAPx15AfbllL4dkyWJ1h136Xrg/l2OPPsfb9QlTM30wXtstNHuV76eN5tsSu3Cl+8d
        denBHcpK1km03e2MG+58eu5q86V61S9dtONugxpub6xdMO2Ws/dslyhJbtVtwMTpi794Y2K/QzuUrpPY
        ZJ/zRj/zwYf1S7c+asDtz3xUW/lqv/KWibY7n3jV5Oen1i3qsPcJuY+RnLjfL5qVJDba65xRz8yvnvvY
        DX3L10+UNP9lj8H3PTTxb103L2uz99C3qlOfvDT2gv02LV2n9GddLxrzUsN9kA1Si18ZeVqXX3XaqctR
        x3SvOPnSe95eec/hipr5jw48prxT510POfrYiqPPuPG51devXfDs2Cu6b5Pekza/63vtI+/WH2DZlkcO
        fvyDmiUNB7jv+bc8Mz8bSe9PvvSIHTZt1aLtFuXHDHrso/Ro184dffjmLddtv8efJy9Mrfh61kMjLz+8
        Y1lJYuN9zrtl2gfvPzP63L0zh96pYuC9MzL/YFPqk2nX99qrc6edu3Y/oedxffpNerfuUkLasrfuuuDI
        fQ/o3vv0s869oN+tL6x8ekPOylOw2iD/O3NbY+EByUzwSzfcreKE7sf3PrV3j0MO7TP8xdwT9vJH/8FZ
        /++bneRWW+3To9dJFXtt/6vdjxv06Ef1b5E6RXZz8gvP3ppdtG6nLj379Ol5+O+332G/3sOmLkrvfc2c
        Caftsvl662++U7f+D897/Zq92rXdptuw/zN17IWHbrPRrw7pk3vr9D3lqJ03zOzfkf0nzlhS5MgKbO+l
        7KXNr2c9OLRPeZtESbPO3QeMuPe19BrF39/Z019gfCvfnnztabttkD3eK+5p/K+jFX2PrlT4KBqfoDf/
        b8HxK7b/I8bd9pcCv1aLPvpGZ/zbbbTRLak1M688rO+UJg8bAODHqdEtiKklc154dMq/n3x59uJVpr3f
        t9RHI7t1u/nD/Nnk9yZVtWTBfx6+9pjOHZq8uMX3LTPBL/D5nB+32rlD99xsr7/d/59FX9W/31NVSxe8
        MenifTbf/Zr3fsJH1sjacRQAAGuJYg/h+OFUT+9/wIkTc3+F/6Ese+TS/o8KsAA/4QC74bwhq390L71g
        zg0XXC/AAAD4/oUG2NJpV3bb76ATz//z0bt0GTxjDTc0/o8tmzc3c/MZP7TK+3sW+izdj9yyubMXNvkW
        qV04e86yn/KR5Vs7jgIAYC0RGWCpz+7v1aFZSfOf7X3Bg43+8SZ+sqo+fGHCVd06lpaU/aJiyH2vrkXF
        u3Yc2dp7fgAAfqKib0GsXra08ge985BQqa8+WzC/zoKFi1c+8+Mnb+04srX3/AAA/ET9dz4DBgAA8L+Q
        AAMAAAgiwAAAAIIIMAAAgCACDAAAIIgAAwAACCLAAAAAgggwAACAIAIMAAAgiAADAAAIIsAAAACCCDAA
        AIAgAgwAACCIAAMAAAgiwAAAAIIIMAAAgCACDAAAIIgAAwAACCLAAAAAgggwAACAIAIMAAAgiAADAAAI
        IsAAAACCCDAAAIAgAgwAACCIAAMAAAgiwAAAAIIIMAAAgCACDAAAIIgAAwAACCLAAAAAgggwAACAIAIM
        AAAgiAADAAAIIsAAAACCCDAAAIAgAgwAACCIAAMAAAgiwAAAAIIIMAAAgCACDAAAIIgAAwAACCLAAAAA
        gggwAACAIAIMAAAgiAADAAAIIsAAAACCCDAAAIAgAgwAACCIAAMAAAgiwAAAAIIIMAAAgCACDAAAIIgA
        AwAACCLAAAAAgggwAACAIAIMAAAgiAADAAAIIsAAAACCCDAAAIAgAgwAACCIAAMAAAgiwAAAAIIIMAAA
        gCACDAAAIIgAAwAACCLAAAAAgggwAACAIAIMAAAgiAADAAAIIsAAAACCCDAAAIAgAgwAACCIAAMAAAgi
        wAAAAIIIMAAAgCACDAAAIIgAAwAACCLAAAAAgggwAACAIAIMAAAgiAADAAAIIsAAAACCCDAAAIAgAgwA
        ACCIAAMAAAgiwAAAAIIIMAAAgCACDAAAIIgAAwAACCLAAAAAgggwAACAIAIMAAAgiAADAAAIIsAAAACC
        CDAAAIAgAgwAACCIAAMAAAgiwAAAAIIIMAAAgCACDAAAIIgAAwAACCLAAAAAgggwAACAIAIMAAAgiAAD
        AAAIIsAAAACCCDAAAIAgAgwAACCIAAMAAAgiwAAAAIIIMAAAgCACDAAAIIgAAwAACCLAAAAAgggwAACA
        IAIMAAAgiAADAAAIIsAAAACCCDAAAIAgAgwAACCIAAMAAAgiwAAAAIIIMAAAgCACDAAAIIgAAwAACCLA
        AAAAgggwAACAIAIMAAAgiAADAAAIIsAAAACCCDAAAIAgAgwAACCIAAMAAAgiwAAAAIIIMAAAgCACDAAA
        IIgAAwAACCLAAAAAgggwAACAIAIMAAAgiAADAAAIIsAAAACCCDAAAIAgAgwAACCIAAMAAAgiwAAAAIII
        MAAAgCACDAAAIIgAAwAACCLAAAAAgggwAACAIAIMAAAgiAADAAAIIsAAAACCCDAAAIAgAgwAACCIAAMA
        AAgiwAAAAIIIMAAAgCACDAAAIIgAAwAACCLAAAAAgggwAACAIAIMAAAgiAADAAAIIsAAAACCCDAAAIAg
        AgwAACCIAAMAAAgiwAAAAIIIMAAAgCACDAAAIIgAAwAACCLAAAAAgggwAACAIAIMAAAgiAADAAAIIsAA
        AACCCDAAAIAgAgwAACCIAAMAAAgiwAAAAIIIMAAAgCACDAAAIIgAAwAACCLAAAAAgggwAACAIAIMAAAg
        iAADAAAIIsAAAACCCDAAAIAgAgwAACCIAAMAAAgiwAAAAIIIMAAAgCACDAAAIIgAAwAACCLAAAAAgggw
        AACAIAIMAAAgiAADAAAIIsAAAACCCDAAAIAgAgwAACCIAAMAAAgiwAAAAIIIMAAAgCACDAAAIIgAAwAA
        CCLAAAAAgggwAACAIAIMAAAgiAADAAAIIsAAAACCCDAAAIAgAgwAACCIAAMAAAgiwAAAAIIIMAAAgCAC
        DAAAIIgAAwAACCLAAAAAgggwAACAIAIMAAAgiAADAAAIIsAAAACCCDAAAIAgAgwAACCIAAMAAAgiwAAA
        AIIIMAAAgCACDAAAIIgAAwAACCLAAAAAgggwAACAIAIMAAAgiAADAAAIIsAAAACCCDAAAIAgAgwAACCI
        AAMAAAgiwAAAAIIIMAAAgCACDAAAIIgAAwAACCLAAAAAgggwAACAIAIMAAAgiAADAAAIIsAAAACCCDAA
        AIAgAgwAACCIAAMAAAgiwAAAAIIIMAAAgCACDAAAIIgAAwAACCLAAAAAgggwAACAIAIMAAAgiAADAAAI
        IsAAAACCCDAAAIAgAgwAACCIAAMAAAgiwAAAAIIIMAAAgCACDAAAIIgAAwAACCLAAAAAgggwAACAIAIM
        AAAgiAADAAAIIsAAAACCCDAAAIAgAgwAACCIAAMAAAgiwAAAAIIIMAAAgCACDAAAIIgAAwAACCLAAAAA
        gggwAACAIAIMAAAgiAADAAAIIsAAAACCCDAAAIAgAgwAACCIAAMAAAgiwAAAAIIIMAAAgCACDAAAIIgA
        AwAACCLAAAAAgggwAACAIAIMAAAgiAADAAAIIsAAAACCCDAAAIAgAgwAACCIAAMAAAgiwAAAAIIIMAAA
        gCACDAAAIIgAAwAACCLAAAAAgggwAACAIAIMAAAgiAADAAAIIsAAAACCCDAAAIAgAgwAACCIAAMAAAgi
        wAAAAIIIMAAAgCACDAAAIIgAAwAACCLAAAAAgggwAACAIAIMAAAgiAADAAAIIsAAAACCCDAAAIAgAgwA
        ACCIAAMAAAgiwAAAAIIIMAAAgCACDAAAIIgAAwAACCLAAAAAgggwAACAIAIMAAAgiAADAAAIIsAAAACC
        CDAAAIAgAgwAACCIAAMAAAgiwAAAAIIIMAAAgCACDAAAIIgAAwAACCLAAAAAgggwAACAIAIMAAAgiAAD
        AAAIIsAAAACCCDAAAIAgAgwAACCIAAMAAAgiwAAAAIIIMAAAgCACDAAAIIgAAwAACCLAAAAAgggwAACA
        IAIMAAAgiAADAAAIIsAAAACCCDAAAIAgAgwAACCIAAMAAAgiwAAAAIIIMAAAgCACDAAAIIgAAwAACCLA
        AAAAgggwAACAIAIMAAAgiAADAAAIIsAAAACCCDAAAIAgAgwAACCIAAMAAAgiwAAAAIIIMAAAgCACDAAA
        IIgAAwAACCLAAAAAgggwAACAIAIMAAAgiAADAAAIIsAAAACCCDAAAIAgAgwAACCIAAMAAAgiwAAAAIII
        MAAAgCACDAAAIIgAAwAACCLAAAAAgggwAACAIAIMAAAgiAADAAAIIsAAAACCCDAAAIAgAgwAACCIAAMA
        AAgiwAAAAIIIMAAAgCACDAAAIIgAAwAACCLAAAAAgggwAACAIAIMAAAgiAADAAAIIsAAAACCCDAAAIAg
        AgwAACCIAAMAAAgiwAAAAIIIMAAAgCACDAAAIIgAAwAACCLAAAAAgggwAACAIAIMAAAgiAADAAAIIsAA
        AACCCDAAAIAgAgwAACCIAAMAAAgiwAAAAIIIMAAAgCACDAAAIIgAAwAACCLAAAAAgggwAACAIAIMAAAg
        iAADAAAIIsAAAACCCDAAAIAgAgwAACCIAAMAAAgiwAAAAIIIMAAAgCACDAAAIIgAAwAACCLAAAAAgggw
        AACAIAIMAAAgiAADAAAIIsAAAACCCDAAAIAgAgwAACCIAAMAAAgiwAAAAIIIMAAAgCACDAAAIIgAAwAA
        CCLAAAAAgggwAACAIAIMAAAgiAADAAAIIsAAAACCCDAAAIAgAgwAACCIAAMAAAgiwAAAAIIIMAAAgCAC
        DAAAIIgAAwAACCLAAAAAgggwAACAIAIMAAAgiAADAAAIIsAAAACCCDAAAIAgAgwAACCIAAMAAAgiwAAA
        AIIIMAAAgCACDAAAIIgAAwAACCLAAAAAgggwAACAIAIMAAAgiAADAAAIIsAAAACCCDAAAIAgAgwAACCI
        AAMAAAgiwAAAAIIIMAAAgCACDAAAIIgAAwAACCLAAAAAgggwAACAIAIMAAAgiAADAAAIIsAAAACCCDAA
        AIAgAgwAACCIAAMAAAgiwAAAAIIIMAAAgCACDAAAIIgAAwAACCLAAAAAgggwAACAIAIMAAAgiAADAAAI
        IsAAAACCCDAAAIAgAgwAACCIAAMAAAgiwAAAAIIIMAAAgCACDAAAIIgAAwAACCLAAAAAgggwAACAIAIM
        AAAgiAADAAAIIsAAAACCCDAAAIAgAgwAACCIAAMAAAgiwAAAAIIIMAAAgCACDAAAIIgAAwAACCLAAAAA
        gggwAACAIAIMAAAgiAADAAAIIsAAAACCCDAAAIAgAgwAACCIAAMAAAgiwAAAAIIIMAAAgCACDAAAIIgA
        AwAACCLAAAAAgggwAACAIAIMAAAgiAADAAAIIsAAAACCCDAAAIAgAgwAACCIAAMAAAgiwAAAAIIIMAAA
        gCACDAAAIIgAAwAACCLAAAAAgggwAACAIAIMAAAgiAADAAAIIsAAAACCCDAAAIAgAgwAACCIAAMAAAgi
        wAAAAIIIMAAAgCACDAAAIIgAAwAACCLAAAAAgggwAACAIAIMAAAgiAADAAAIIsAAAACCCDAAAIAgAgwA
        ACCIAAMAAAgiwAAAAIIIMAAAgCACDAAAIIgAAwAACCLAAAAAgggwAACAIAIMAAAgiAADAAAIIsAAAACC
        CDAAAIAgAgwAACCIAAMAAAgiwAAAAIIIMAAAgCACDAAAIIgAAwAACCLAAAAAgggwAACAIAIMAAAgiAAD
        AAAIIsAAAACCCDAAAIAgAgwAACCIAAMAAAgiwAAAAIIIMAAAgCACDAAAIIgAAwAACCLAAAAAgggwAACA
        IAIMAAAgiAADAAAIIsAAAACCCDAAAIAgAgwAACCIAAMAAAgiwAAAAIIIMAAAgCACDAAAIIgAAwAACCLA
        AAAAgggwAACAIAIMAAAgiAADAAAIIsAAAACCCDAAAIAgAgwAACCIAAMAAAgiwAAAAIIIMAAAgCACDAAA
        IIgAAwAACCLAAAAAgggwAACAIAIMAAAgiAADAAAIIsAAAABCrFjx/wFuJ7fr44JpWAAAAABJRU5ErkJg
        gg==
</value>
  </data>
</root>